# -*- coding: utf-8 -*-
"""preprocessing.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1sJFVNwgNWNMSwQvZy2qki3RncMGILIVr
"""

import pandas as pd
from datetime import datetime

def convert_to_sql_datetime(date_string):
    """
    Convert various date formats to SQL-compatible datetime string (YYYY-MM-DD HH:MM:SS)

    Handles these input formats:
    - 'dd/mm/yyyy HH:MM:SS'
    - 'dd/mm/yyyy'
    - 'd/m/yyyy'
    """
    # Strip any leading/trailing whitespace
    date_string = date_string.strip()

    # List of possible input formats
    formats = [
        '%d/%m/%Y %H:%M:%S',  # Full datetime
        '%d/%m/%Y',           # Date only with leading zeros
        '%d/%m/%Y %H:%M',     # Datetime with minute precision
        '%d/%m/%Y %H',        # Datetime with hour precision
        '%d/%m/%Y'            # Alternate date format
    ]

    # Try parsing with different formats
    for fmt in formats:
        try:
            # Parse the date
            parsed_date = datetime.strptime(date_string, fmt)

            # Convert to SQL datetime format
            return parsed_date.strftime('%Y-%m-%d %H:%M:%S')
        except ValueError:
            continue

    # If no format matches, return None or raise an error
    raise ValueError(f"Unable to parse date: {date_string}")

def convert_dates_to_sql(dates):
    """
    Convert a list of dates to SQL datetime format

    Args:
        dates (list or pandas.Series): List of date strings

    Returns:
        list: List of SQL-formatted datetime strings
    """
    return [convert_to_sql_datetime(date) for date in dates]

# Sample input data
df = pd.read_csv('/content/Daily Household Transactions.csv')
dates = df['Date'].tolist()

# Convert dates to SQL format
sql_dates = convert_dates_to_sql(dates)

#remove rows where transactiontype is transfer-out


#replace dates column with new dates
df['Date'] = sql_dates
df = df[df['TransactionType'] != 'Transfer-Out']
df.to_csv('/content/Daily Household Transactions.csv', index=False)